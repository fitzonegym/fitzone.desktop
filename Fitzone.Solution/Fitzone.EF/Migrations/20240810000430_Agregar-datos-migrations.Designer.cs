// <auto-generated />
using System;
using Fitzone.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Fitzone.EF.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20240810000430_Agregar-datos-migrations")]
    partial class Agregardatosmigrations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.5.24306.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Fitzone.Entidades.Actividad", b =>
                {
                    b.Property<int>("idActividad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idActividad"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("idActividad");

                    b.ToTable("Actividad");
                });

            modelBuilder.Entity("Fitzone.Entidades.Barrio", b =>
                {
                    b.Property<int>("idBarrio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idBarrio"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("idBarrio");

                    b.ToTable("Barrio");
                });

            modelBuilder.Entity("Fitzone.Entidades.Configuraciones", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("valor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Configuraciones");
                });

            modelBuilder.Entity("Fitzone.Entidades.Cuota", b =>
                {
                    b.Property<int>("idCuota")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCuota"));

                    b.Property<DateTime>("fechaDesde")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaHasta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("idMembresia")
                        .HasColumnType("int");

                    b.Property<int>("numero")
                        .HasColumnType("int");

                    b.Property<bool>("pagada")
                        .HasColumnType("bit");

                    b.Property<decimal>("precio")
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("idCuota");

                    b.HasIndex("idMembresia");

                    b.ToTable("Cuota");
                });

            modelBuilder.Entity("Fitzone.Entidades.DetalleFactura", b =>
                {
                    b.Property<int>("idDetalleFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idDetalleFactura"));

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<int>("idCuota")
                        .HasColumnType("int");

                    b.Property<int>("idFactura")
                        .HasColumnType("int");

                    b.Property<decimal>("precioUnitario")
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal>("total")
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("idDetalleFactura");

                    b.HasIndex("idCuota");

                    b.HasIndex("idFactura");

                    b.ToTable("DetalleFactura");
                });

            modelBuilder.Entity("Fitzone.Entidades.Equipamiento", b =>
                {
                    b.Property<int>("idEquipamiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idEquipamiento"));

                    b.Property<string>("dimensiones")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("idEstadoEquipamiento")
                        .HasColumnType("int");

                    b.Property<int>("idMarca")
                        .HasColumnType("int");

                    b.Property<string>("modelo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("idEquipamiento");

                    b.HasIndex("idEstadoEquipamiento");

                    b.HasIndex("idMarca");

                    b.ToTable("Equipamiento");
                });

            modelBuilder.Entity("Fitzone.Entidades.EquipamientoTipoMembresia", b =>
                {
                    b.Property<int>("idexc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idexc"));

                    b.Property<int>("cantidadEquipamiento")
                        .HasColumnType("int");

                    b.Property<int>("idEquipamiento")
                        .HasColumnType("int");

                    b.Property<int>("idTipoMembresia")
                        .HasColumnType("int");

                    b.HasKey("idexc");

                    b.HasIndex("idEquipamiento");

                    b.HasIndex("idTipoMembresia");

                    b.ToTable("EquipamientoTipoMembresia");
                });

            modelBuilder.Entity("Fitzone.Entidades.EstadoEquipamiento", b =>
                {
                    b.Property<int>("idEstadoEquipamiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idEstadoEquipamiento"));

                    b.Property<string>("nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("idEstadoEquipamiento");

                    b.ToTable("EstadoEquipamiento");
                });

            modelBuilder.Entity("Fitzone.Entidades.EstadoMembresia", b =>
                {
                    b.Property<int>("idEstadoMembresia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idEstadoMembresia"));

                    b.Property<string>("descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("idEstadoMembresia");

                    b.ToTable("EstadoMembresia");
                });

            modelBuilder.Entity("Fitzone.Entidades.Factura", b =>
                {
                    b.Property<int>("idFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idFactura"));

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("letra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("metodoDePago")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipoFactura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("total")
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("idFactura");

                    b.ToTable("Factura");
                });

            modelBuilder.Entity("Fitzone.Entidades.Instructor", b =>
                {
                    b.Property<int>("idInstructor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idInstructor"));

                    b.Property<bool>("anulado")
                        .HasColumnType("bit");

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("calle")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("calleNumero")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("fechaAlta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("idBarrio")
                        .HasColumnType("int");

                    b.Property<string>("mail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("numeroDocumento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("telefono1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("telefono2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("tipoDocumento")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("idInstructor");

                    b.HasIndex("idBarrio");

                    b.ToTable("Instructor");
                });

            modelBuilder.Entity("Fitzone.Entidades.InstructorActividad", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("idActividad")
                        .HasColumnType("int");

                    b.Property<int>("idInstructor")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idActividad");

                    b.HasIndex("idInstructor");

                    b.ToTable("InstructorActividad");
                });

            modelBuilder.Entity("Fitzone.Entidades.Marca", b =>
                {
                    b.Property<int>("idMarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idMarca"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("idMarca");

                    b.ToTable("Marca");
                });

            modelBuilder.Entity("Fitzone.Entidades.Membresia", b =>
                {
                    b.Property<int>("idMembresia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idMembresia"));

                    b.Property<int>("cantidadDiasSemanales")
                        .HasColumnType("int");

                    b.Property<string>("detalle")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("diasHabilitados")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechaAlta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaDesde")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaHasta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<TimeOnly>("horaHasta")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("horadesde")
                        .HasColumnType("time");

                    b.Property<int>("idActividad")
                        .HasColumnType("int");

                    b.Property<int>("idEstadoMembresia")
                        .HasColumnType("int");

                    b.Property<int?>("idInstructor")
                        .HasColumnType("int");

                    b.Property<int>("idSocio")
                        .HasColumnType("int");

                    b.Property<int>("idTipoMembresia")
                        .HasColumnType("int");

                    b.Property<decimal>("precio")
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("idMembresia");

                    b.HasIndex("idActividad");

                    b.HasIndex("idEstadoMembresia");

                    b.HasIndex("idInstructor");

                    b.HasIndex("idSocio");

                    b.HasIndex("idTipoMembresia");

                    b.ToTable("Membresia");
                });

            modelBuilder.Entity("Fitzone.Entidades.Socio", b =>
                {
                    b.Property<int>("idSocio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idSocio"));

                    b.Property<bool>("anulado")
                        .HasColumnType("bit");

                    b.Property<string>("apellido")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("calle")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("calleNumero")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("fechaAlta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("idBarrio")
                        .HasColumnType("int");

                    b.Property<byte[]>("imagen")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("mail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("numeroDocumento")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("telefono1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("telefono2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("tipoDocumento")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("idSocio");

                    b.HasIndex("idBarrio");

                    b.ToTable("Socio");
                });

            modelBuilder.Entity("Fitzone.Entidades.TipoMembresia", b =>
                {
                    b.Property<int>("idTipoMembresia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idTipoMembresia"));

                    b.Property<int>("cantidadCuotas")
                        .HasColumnType("int");

                    b.Property<int>("cantidadDiasSemanales")
                        .HasColumnType("int");

                    b.Property<bool>("cuotaUnica")
                        .HasColumnType("bit");

                    b.Property<int?>("cupoClase")
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("diasHabilitados")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("horaHasta")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("horadesde")
                        .HasColumnType("time");

                    b.Property<int>("idActividad")
                        .HasColumnType("int");

                    b.Property<int?>("idInstructor")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("precioTotal")
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("idTipoMembresia");

                    b.HasIndex("idActividad");

                    b.HasIndex("idInstructor");

                    b.ToTable("TipoMembresia");
                });

            modelBuilder.Entity("Fitzone.Entidades.Cuota", b =>
                {
                    b.HasOne("Fitzone.Entidades.Membresia", "Membresia")
                        .WithMany("Cuotas")
                        .HasForeignKey("idMembresia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Membresia");
                });

            modelBuilder.Entity("Fitzone.Entidades.DetalleFactura", b =>
                {
                    b.HasOne("Fitzone.Entidades.Cuota", "Cuota")
                        .WithMany()
                        .HasForeignKey("idCuota")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fitzone.Entidades.Factura", "Factura")
                        .WithMany("DetalleFactura")
                        .HasForeignKey("idFactura")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cuota");

                    b.Navigation("Factura");
                });

            modelBuilder.Entity("Fitzone.Entidades.Equipamiento", b =>
                {
                    b.HasOne("Fitzone.Entidades.EstadoEquipamiento", "EstadoEquipamiento")
                        .WithMany()
                        .HasForeignKey("idEstadoEquipamiento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fitzone.Entidades.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("idMarca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoEquipamiento");

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("Fitzone.Entidades.EquipamientoTipoMembresia", b =>
                {
                    b.HasOne("Fitzone.Entidades.Equipamiento", "Equipamiento")
                        .WithMany()
                        .HasForeignKey("idEquipamiento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fitzone.Entidades.TipoMembresia", "TipoMembresia")
                        .WithMany()
                        .HasForeignKey("idTipoMembresia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipamiento");

                    b.Navigation("TipoMembresia");
                });

            modelBuilder.Entity("Fitzone.Entidades.Instructor", b =>
                {
                    b.HasOne("Fitzone.Entidades.Barrio", "Barrio")
                        .WithMany()
                        .HasForeignKey("idBarrio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Barrio");
                });

            modelBuilder.Entity("Fitzone.Entidades.InstructorActividad", b =>
                {
                    b.HasOne("Fitzone.Entidades.Actividad", "Actividad")
                        .WithMany("InstructorActividades")
                        .HasForeignKey("idActividad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fitzone.Entidades.Instructor", "Instructor")
                        .WithMany("InstructorActividades")
                        .HasForeignKey("idInstructor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actividad");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("Fitzone.Entidades.Membresia", b =>
                {
                    b.HasOne("Fitzone.Entidades.Actividad", "Actividad")
                        .WithMany()
                        .HasForeignKey("idActividad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fitzone.Entidades.EstadoMembresia", "EstadoMembresia")
                        .WithMany()
                        .HasForeignKey("idEstadoMembresia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fitzone.Entidades.Instructor", "Instructor")
                        .WithMany()
                        .HasForeignKey("idInstructor");

                    b.HasOne("Fitzone.Entidades.Socio", "Socio")
                        .WithMany()
                        .HasForeignKey("idSocio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fitzone.Entidades.TipoMembresia", "TipoMembresia")
                        .WithMany()
                        .HasForeignKey("idTipoMembresia")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Actividad");

                    b.Navigation("EstadoMembresia");

                    b.Navigation("Instructor");

                    b.Navigation("Socio");

                    b.Navigation("TipoMembresia");
                });

            modelBuilder.Entity("Fitzone.Entidades.Socio", b =>
                {
                    b.HasOne("Fitzone.Entidades.Barrio", "Barrio")
                        .WithMany()
                        .HasForeignKey("idBarrio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Barrio");
                });

            modelBuilder.Entity("Fitzone.Entidades.TipoMembresia", b =>
                {
                    b.HasOne("Fitzone.Entidades.Actividad", "Actividad")
                        .WithMany()
                        .HasForeignKey("idActividad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fitzone.Entidades.Instructor", "Instructor")
                        .WithMany()
                        .HasForeignKey("idInstructor");

                    b.Navigation("Actividad");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("Fitzone.Entidades.Actividad", b =>
                {
                    b.Navigation("InstructorActividades");
                });

            modelBuilder.Entity("Fitzone.Entidades.Factura", b =>
                {
                    b.Navigation("DetalleFactura");
                });

            modelBuilder.Entity("Fitzone.Entidades.Instructor", b =>
                {
                    b.Navigation("InstructorActividades");
                });

            modelBuilder.Entity("Fitzone.Entidades.Membresia", b =>
                {
                    b.Navigation("Cuotas");
                });
#pragma warning restore 612, 618
        }
    }
}
