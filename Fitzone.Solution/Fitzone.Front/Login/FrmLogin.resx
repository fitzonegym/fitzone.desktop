<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>